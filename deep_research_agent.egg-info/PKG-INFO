Metadata-Version: 2.4
Name: deep-research-agent
Version: 1.0.0
Summary: AI-powered research assistant with vector search and knowledge management
Home-page: https://github.com/coreyalejandro/code-genie-deep-research-agent
Author: Corey Alejandro
Author-email: your.email@example.com
Project-URL: Bug Reports, https://github.com/coreyalejandro/code-genie-deep-research-agent/issues
Project-URL: Source, https://github.com/coreyalejandro/code-genie-deep-research-agent
Project-URL: Documentation, https://github.com/coreyalejandro/code-genie-deep-research-agent#readme
Keywords: ai research assistant vector-search knowledge-management openai langchain
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Topic :: Scientific/Engineering :: Artificial Intelligence
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Requires-Python: >=3.9
Description-Content-Type: text/markdown
Requires-Dist: python-dotenv
Requires-Dist: langchain
Requires-Dist: langchain-community
Requires-Dist: langchain-openai
Requires-Dist: openai
Requires-Dist: tiktoken
Requires-Dist: chromadb
Provides-Extra: dev
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: black; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: bandit; extra == "dev"
Requires-Dist: safety; extra == "dev"
Provides-Extra: dashboard
Requires-Dist: streamlit; extra == "dashboard"
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: keywords
Dynamic: project-url
Dynamic: provides-extra
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# Deep Research Agent

An AI-powered research assistant with vector search and knowledge management capabilities.

## 🚀 Quick Start

### Option 1: Using Make (Recommended)
```bash
# Set up everything
make setup

# Run the agent
make run
```

### Option 2: Using CLI
```bash
# Install CLI
pip install -e .

# Set up environment
research setup

# Run the agent
research run
```

### Option 3: Manual Setup
```bash
# Install dependencies
pip install -r requirements.txt

# Set up environment
cp .env.example .env
# Edit .env and add your OpenAI API key

# Initialize database
python db_utils.py

# Run the agent
python qa_agent.py
```

## 🛠️ Available Commands

### Make Commands
```bash
make help          # Show all available commands
make install       # Install dependencies
make setup         # Complete setup (install + db-init)
make run           # Start the QA agent
make db-init       # Initialize database
make db-show       # Show database schema
make db-reset      # Reset database (with confirmation)
make lint          # Run linting checks
make format        # Format code
make clean         # Clean temporary files
make install-cli   # Install the CLI tool
```

### CLI Commands
```bash
research setup          # Set up environment
research run            # Start interactive QA agent
research db-init        # Initialize database
research db-show        # Show database schema
research db-reset       # Reset database
research dashboard      # Start web dashboard
research help           # Show help
```

## 📋 Features

- **Vector Search**: Semantic search through your research documents
- **Knowledge Management**: Store and organize research findings
- **AI-Powered Q&A**: Ask questions about your research
- **Database Schema**: Tractable and maintainable database structure
- **CLI Interface**: Easy-to-use command-line tools
- **GitHub Actions**: Automated testing and deployment
- **Makefile**: Simplified development workflow

## 🏗️ Architecture

```
├── qa_agent.py          # Main QA agent
├── db_utils.py          # Database utilities
├── research_cli.py      # CLI interface
├── schema_sqlite.sql    # Database schema
├── Makefile            # Development commands
├── setup.py            # Installation script
└── .github/workflows/  # CI/CD pipeline
```

## 🔧 Development

### Prerequisites
- Python 3.9+
- OpenAI API key

### Development Setup
```bash
# Clone the repository
git clone https://github.com/coreyalejandro/code-genie-deep-research-agent.git
cd code-genie-deep-research-agent

# Install in development mode
pip install -e .[dev]

# Set up environment
make setup
```

### Running Tests
```bash
# Run all checks
make dev

# Or individually
make lint
make format
make test
```

## 🤖 CI/CD

The project includes GitHub Actions for:
- **Testing**: Multi-Python version testing
- **Linting**: Code quality checks
- **Security**: Vulnerability scanning
- **Build**: Automated builds and artifacts

## 📖 Documentation

- [Setup Guide](SETUP.md) - Detailed setup instructions
- [Database Schema](schema_sqlite.sql) - Database structure
- [CLI Reference](research_cli.py) - Command-line interface

## 🤝 Contributing

1. Fork the repository
2. Create a feature branch
3. Make your changes
4. Run `make dev` to check code quality
5. Submit a pull request

## 📄 License

MIT License - see LICENSE file for details.
